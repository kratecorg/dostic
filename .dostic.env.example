# dostic Configuration Example
# Copy this file to .dostic.env and adjust the values to your needs
# chmod 600 .dostic.env (important for security!)

# =============================================================================
# REQUIRED: Repository Configuration
# =============================================================================

# Repository location - choose one of the following:

# Option 1: Local filesystem
REPOSITORY="/mnt/backups/restic-repo"

# Option 2: AWS S3
#REPOSITORY="s3:s3.amazonaws.com/my-bucket/restic-repo"
#AWS_ACCESS_KEY_ID="your-access-key-id"
#AWS_SECRET_ACCESS_KEY="your-secret-access-key"

# Option 3: Backblaze B2
#REPOSITORY="s3:s3.us-west-002.backblazeb2.com/my-bucket/restic-repo"
#AWS_ACCESS_KEY_ID="your-b2-key-id"
#AWS_SECRET_ACCESS_KEY="your-b2-application-key"

# Option 4: MinIO or other S3-compatible
#REPOSITORY="s3:https://minio.example.com/my-bucket/restic-repo"
#AWS_ACCESS_KEY_ID="your-minio-access-key"
#AWS_SECRET_ACCESS_KEY="your-minio-secret-key"

# =============================================================================
# REQUIRED: Password File
# =============================================================================

# Path to file containing the repository password
# This file MUST have permissions 0600 or 0700!
# Create with: echo "your-secure-password" > /path/to/passfile && chmod 600 /path/to/passfile
RESTIC_PASSWORD_FILE="/path/to/restic-password-file"

# =============================================================================
# OPTIONAL: General Settings
# =============================================================================

# Hostname tag for backups (default: system hostname)
HOST="$(hostname)"

# Base directory for temporary database dumps (default: /tmp/backups)
BACKUP_BASEDIR="/tmp/backups"

# Cache volume name (default: dostic_cache)
# This volume stores restic's cache to speed up subsequent backups
CACHE_VOLUME_NAME="dostic_cache"

# =============================================================================
# OPTIONAL: Folder Backups
# =============================================================================

# Comma-separated list of folders to backup
# Format: /path/to/folder:tag-name or just /path/to/folder
# If no tag is specified, the folder basename will be used
#
# Examples:
#   Single folder with automatic tag: /etc
#   Single folder with custom tag: /etc:system-config
#   Multiple folders: /etc:system-config,/home/user/data:user-data,/var/www/html:website
#
#BACKUP_FOLDERS="/etc:system-config,/home/user/documents:docs"

# =============================================================================
# OPTIONAL: Volume Exclusions
# =============================================================================

# Exclude specific volumes by exact name (comma-separated)
# The cache volume (CACHE_VOLUME_NAME) is automatically excluded
#
# Example: Exclude temporary and test volumes
#EXCLUDE_VOLUMES="temp-volume,cache-data,test-data"

# Exclude volumes matching a regex pattern
# Pattern is matched against the entire volume name
#
# Examples:
#   Exclude all volumes starting with "test-": ^test-.*
#   Exclude all volumes ending with "-cache": .*-cache$
#   Exclude multiple patterns: ^test-.*|.*-cache$|.*-tmp$
#
#EXCLUDE_VOLUMES_REGEX="^test-.*|.*-cache$"

# =============================================================================
# OPTIONAL: Retention Policy
# =============================================================================

# Number of daily backups to keep (default: 14)
KEEP_DAILY=14

# Number of weekly backups to keep (default: 12)
KEEP_WEEKLY=12

# Number of monthly backups to keep (default: 12)
KEEP_MONTHLY=12

# Number of yearly backups to keep (default: 5)
KEEP_YEARLY=5

# =============================================================================
# NOTES
# =============================================================================

# PostgreSQL Databases:
#   - Automatically detected by port 5432
#   - Multiple user fallback strategies (postgres, ${POSTGRES_USER}, etc.)
#   - Each container backed up separately with tag: postgres/container-name
#
# MySQL Databases:
#   - Automatically detected by port 3306
#   - Uses ${MYSQL_ROOT_PASSWORD} from container environment
#   - Each container backed up separately with tag: mysql/container-name
#
# Docker Volumes:
#   - All named volumes are backed up automatically
#   - Hash-only volumes (64 character hex) are excluded
#   - Each volume backed up separately with tag: volume/volume-name
#
# Repository Format:
#   - Creates standard Restic repositories
#   - Can be accessed with any Restic client
#   - Compatible with all Restic tools and features
